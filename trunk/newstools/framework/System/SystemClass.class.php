<?php#region License Statement	// Copyright (c) Sitemaps.co.kr All rights reserved.	//	// Filename	: SystemClass.class.php	// Path		: [framework]/System/	// Code		: UTF-8	// Desc		: SystemClass	// Author	: Sergei Kim (김성호, master@newstools.kr)	// Update	: 20091018#endregionif(!defined('__FRAMEWORK_PATH__')){header("HTTP/1.1 404 Not Found");	header("Content-Type: text/html; charset=utf-8");	exit();}if( !class_exists("SystemClass") ){	class SystemClass	{		#region Fields Statement			private $errorInfo	= array('IsError'=>false, 'CODE'=>"", 'DESC'=>"");			protected function Version($case, $value=null){ switch( strtolower( $case ) ) { case 'get':	return '1.0.0';	break; } }			final public function __set($key, $value)			{				if( method_exists($this, $key) )					$this->{$key}('set', $value);			}			final public function __get($key)			{				if( method_exists($this, $key) )					return $this->{$key}('get');			}			public function __isset($key)			{				if( method_exists($this, $key) )				{					$temp = $this->{$key}('get');					return isset($temp);				}			}protected function MyVar($case, $value=null){	switch( strtolower( $case ) )	{		case 'get':			return $this->pri;			break;		case 'set':			$this->pri = $value;			break;	}}private $pri = 'pri_ori';public function getPri(){	return $this->pri;}public function issetPri(){	return isset($this->pri);}protected $pro = 'pro_ori';public function getPro(){	return $this->pro;}public function issetPro(){	return isset($this->pro);}public $pub = 'pub_ori';public function getPub(){	return $this->pub;}public function issetPub(){	return isset($this->pub);}		#endregion		#region Creator Statement			function __construct()			{				$this->OnInit();			}			function __destruct()			{			}		#endregion		#region Initialize Area			protected function OnInit()			{			}		#endregion		#region Base Statement			public function GetVersion()			{				return $this->Version;			}			public function GetType()			{				return get_class($this);			}			public function __toString()			{				return $this->ToString();			}			public function ToString()			{				return sprintf("%s %s", $this->GetType(), $this->GetVersion());			}			public static function ReferenceEquals( &$objA, &$objB )			{				return ($objA===$objB);			}			protected function _Equals( &$objA )			{				return self::ReferenceEquals( $this, $objA );			}			public function Equals( &$objA )			{				if( is_null($this) )	//used by Static Case				{					return is_a( $objA, __CLASS__ );				}				else				{					return $this->_Equals( $objA );				}			}		#endregion		#region Message Statement			protected function setMsg( $ab_IsError, $as_MsgCode, $as_Msg='' )			{				$this->errorInfo['IsError']	= $ab_IsError;				$this->errorInfo['CODE']	= $as_MsgCode;				$this->errorInfo['DESC']	= $as_Msg;			}			protected function onError( $as_MsgCode, $as_Msg='' )			{				$this->setMsg( true, $as_MsgCode, $as_Msg );			}			public function PrintMsg( $ab_EndScript=false )			{				echo sprintf('<!-- [CODE] %s [DESC] %s -->', $this->errorInfo['CODE'], $this->errorInfo['DESC']);				echo "\r\n";				if( $ab_EndScript ) { exit; }			}			public function HasError()			{				return $this->errorInfo['IsError'];			}			public function GetMsg()			{				$rtn->IsError	= $this->errorInfo['IsError'];				$rtn->CODE		= $this->errorInfo['CODE'];				$rtn->DESC		= $this->errorInfo['DESC'];				return $rtn;			}		#endregion	}}?>
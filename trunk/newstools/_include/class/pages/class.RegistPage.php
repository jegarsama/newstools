<?php#region License Statement	// Copyright (c) SeniorPartners. All rights reserved.	//	// 클래스명	: RegistPage	// 경로		: [www]/_include/class/	// 코드		: ANSI	// 설명		: 회원가입 페이지 출력 클래스	// 작성자	: 김성호 (sh.kim@yourstage.com)	// 소속명	: Development Team	// 수정일	: 20090501#endregionif( !class_exists("RegistPage") ){	global $gcls_ClassCollection;	$gcls_ClassCollection->LoadClassDefine( "/class/pages", "BasePage" );	$gcls_ClassCollection->LoadClassDefine( "/class/data", "EZ_Page", GDC_INC_ROOT );	$gcls_ClassCollection->LoadClassDefine( "/class/data", "EZ_Zipcode", GDC_INC_ROOT );	$gcls_ClassCollection->LoadClassDefine( "/class/data", "EZ_Member", GDC_INC_ROOT );	$gcls_ClassCollection->LoadClassDefine( "/SMS", "TelInfo", GDC_SYSTEM_ROOT );	class RegistPage extends BasePage	{		var $cls_EZ_PageControl	= null;	//Page 관리용 클래스		var $cls_EZ_Zipcode	= null;	//우편번호 관리용 클래스		var $cls_Member		= null;	//고객 관리용 클래스		var $cls_TelInfo	= null;	//전화번호 관리용 클래스		//클래스 생성자		function RegistPage()		{			$this->InitField();			$this->cls_LeftMenuArea = new LeftMenuArea( "mypage1" );	//좌측메뉴클래스		}		#region 상속받은 메소드 보완			/**			* 데이터 초기화			*			*/			function InitField()			{				parent::InitField();				$this->cls_EZ_PageControl = new EZ_Page();				$this->cls_EZ_Zipcode = new EZ_Zipcode();				$this->cls_Member= new EZ_Member();				$this->cls_TelInfo = new TelInfo();			}			/**			* DBA 셋팅			*			* @param class		$acls_DBA				:	DBA 클래스			*/			function SetDBA( $acls_DBA )			{				parent::SetDBA( $acls_DBA );				$this->cls_EZ_PageControl->SetDBA( $acls_DBA );				$this->cls_EZ_Zipcode->SetDBA( $acls_DBA );				$this->cls_Member->SetDBA( $acls_DBA );			}		#endregion		#region EZ_Member 영역			/**			* 로그인 설정처리			*			*/			function SetLogin()			{				if( $this->GetRequest( "idsave", "", true ) == "on" )				{					$this->SetCookie( "ez_session[idval]", $this->GetMemberInfoByDB( "id" ), time() + (3600 * 24 * 365), '/', "heart-heart.org" );					$this->SetCookie( "ez_session[idsave]", "on", time() + (3600 * 24 * 365), '/', "heart-heart.org" );				}				else				{					$this->SetCookie( "ez_session[idval]", "", time() - 3600, '/', "heart-heart.org" );					$this->SetCookie( "ez_session[idsave]", "", time() - 3600, '/', "heart-heart.org" );				}				$this->SetCookie( "ez_session[id]", $this->GetMemberInfoByDB( "id" ), 0, '/', "heart-heart.org" );				$this->SetCookie( "ez_session[name]", $this->GetMemberInfoByDB( "name" ), 0, '/', "heart-heart.org" );				$this->SetCookie( "ez_session[email]", $this->GetMemberInfoByDB( "email" ), 0, '/', "heart-heart.org" );				$this->SetCookie( "ez_session[level]", $this->GetMemberInfoByDB( "level" ), 0, '/', "heart-heart.org" );			}			/**			* 로그아웃 설정처리			*			*/			function SetLogout()			{				$this->SetCookie( "ez_session[id]", "", time() - 3600, '/', "heart-heart.org" );				$this->SetCookie( "ez_session[name]", "", time() - 3600, '/', "heart-heart.org" );				$this->SetCookie( "ez_session[email]", "", time() - 3600, '/', "heart-heart.org" );				$this->SetCookie( "ez_session[level]", "", time() - 3600, '/', "heart-heart.org" );			}		#endregion		#region EZ_PageControl 관련 메소드			/**			* LoadPageInfoByType			*			* @param string		$as_PageType				:	페이지 구분자			* @return boolean			*/			function LoadPageInfoByType( $as_PageType )			{				return $this->cls_EZ_PageControl->Load( "ez_page", "WHERE (type='".$as_PageType."') " );			}			/**			* GetPageContent			*			* @return string			*/			function GetPageContent()			{				return $this->cls_EZ_PageControl->GetData( "ez_page", "content" );			}		#endregion		#region 우편번호 정보 관리			/**			* 우편번호 검색요청 확인			*			* @return boolean			*/			function IsSearchConditionOfZipCode()			{				$is_Address = $this->GetRequest( "address", "" );				return (!empty($is_Address));			}			/**			* 우편번호 검색			*			* @return recordset			*/			function GetSearchZipCode()			{				$is_Address = $this->GetRequest( "address", "" );				$is_Where = "WHERE (sido like '%".$is_Address."%') or (gugun like '%".$is_Address."%') or (dong like '%".$is_Address."%') or (bunji like '%".$is_Address."%')";				return $this->cls_EZ_Zipcode->GetSelectRecords( "ez_zipcode", $is_Where, "" );			}			/**			* 레코드 루프적용			*			* @param recordset	$ars_Source				:	데이터 원본 레코드셋			* @param array		$arr_Fields				:	데이터 셋팅적용 필드배열			* @return boolean			*/			function LoopForZipCode( $ars_Source, $arr_Fields=null )			{				return $this->cls_EZ_Zipcode->Loop( "ez_zipcode", $ars_Source, $arr_Fields );			}			/**			* 우편번호 속성값 반환			*			* @param string		$as_FieldName			:	필드명			* @return string			*/			function GetZipCodeInfo( $as_FieldName )			{				return $this->cls_EZ_Zipcode->GetData( "ez_zipcode", $as_FieldName );			}		#endregion	}}?>
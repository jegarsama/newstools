<?php#region License Statement	// Copyright (c) SeniorPartners. All rights reserved.	//	// 클래스명	: BasePage	// 경로		: [www]/_include/class/	// 코드		: ANSI	// 설명		: 기본 페이지 출력 클래스	// 작성자	: 최진원 (jw.choi@yourstage.com)	// 소속명	: Development Team	// 수정일	: 20090424#endregionif( !class_exists("BasePage") ){	global $gcls_ClassCollection;	$gcls_ClassCollection->LoadClassDefine( "/page", "Page", GDC_SYSTEM_ROOT );		//Page 출력 클래스	$gcls_ClassCollection->LoadClassDefine( "/class/data", "UserLoginModule" );		//내일보기	$gcls_ClassCollection->LoadClassDefine( "/class/area", "LeftMenuArea" );	$gcls_ClassCollection->LoadClassDefine( "/mimemessage", "HtmlMessage", GDC_SYSTEM_ROOT );	class BasePage extends Page	{		var $ElementInfo = Array();		//영역별정보		var $cls_MemberLoginModuleControl	= null;	//고객정보 관리용 클래스		var $cls_HtmlMessage= null;	//메일발송 관리용 클래스		var $cls_LeftMenuArea = null;	//좌측메뉴클래스	//내일보기		//클래스 생성자		function BasePage()		{			$this->InitField();			$this->cls_LeftMenuArea = new LeftMenuArea("intro");	//좌측메뉴클래스	//내일보기		}		#region 상속받은 메소드 보완			/**			* 데이터 초기화			*			*/			function InitField()			{				parent::InitField();				$this->SetPageInfoOfField( 'SHORTCUTICON', "http://image.heart-heart.org/favicon.ico" );				$this->AddJavaScript( "http://image.heart-heart.org/js/prototype.js" );				$this->AddJavaScript( "http://image.heart-heart.org/js/packageloader.js" );				$this->AddJavaScript( "http://image.heart-heart.org/js/scriptaculous/scriptaculous.js" );				$this->AddJavaScript( "http://image.heart-heart.org/js/domain/www.js" );				$this->AddJavaScript( "http://image.heart-heart.org/js/classes/SkyScraper.js" );				$this->AddStyleSheet( "http://image.heart-heart.org/css/www.css" );				$this->SetElementInfo( "Header", "" );				$this->SetElementInfo( "Top", "" );				$this->SetElementInfo( "Left", "" );				$this->SetElementInfo( "Content", "" );				$this->SetElementInfo( "Footer", "" );				$this->cls_MemberLoginModuleControl = new UserLoginModule();				$this->cls_HtmlMessage = new HtmlMessage('base64', 'euc-kr');			}			/**			* 출력용 본문설정			*			*/			function PrePrintPage()			{				$this->AddContent( $this->SetCrLf( $this->GetElementInfo( "Header" ) ) );				$this->AddContent( $this->SetCrLf( $this->GetElementInfo( "Top" ) ) );				$this->AddContent( $this->SetCrLf( "<div id='container'>" ) );				$this->AddContent( $this->SetCrLf( $this->GetElementInfo( "Left" ) ) );				$this->AddContent( $this->SetCrLf( $this->GetElementInfo( "Content" ) ) );				$this->AddContent( $this->SetCrLf( "</div>" ) );				$this->AddContent( $this->SetCrLf( $this->GetElementInfo( "Footer" ) ) );			}		#endregion		#region DB 연동 클래스 관련 셋팅 처리			/**			* DBA 셋팅			*			* @param class		$acls_DBA				:	DBA 클래스			*/			function SetDBA( $acls_DBA )			{				$this->cls_MemberLoginModuleControl->SetDBA( $acls_DBA );			}			/**			* Count Of RecordSet			*			* @param object		$ao_RecordSet			:	Query Result			* @return integer			*/			function CountOfRows( $ao_RecordSet )			{				return $this->cls_MemberLoginModuleControl->cls_EZ_MemberControl->cls_DBA->CountOfRows( $ao_RecordSet );			}		#endregion		#region 좌측 메뉴영역 데이터 관리	//내일보기			/**			* 특정 메뉴 필드 데이터 셋팅			*			* @param string		$as_Menu		:	Menu 구분			* @param string		$as_Img			:	image link			* @param string		$as_Alt			:	메뉴설명			* @param string		$as_Link		:	menu link			* @param string		$as_Type		:	설명라벨/메뉴 구분			* @param string		$as_ExistChild	:	하위 메뉴 존재여부			* @param integer	$as_Depth		:	메뉴 깊이			*/			function SetMenuInfo( $as_Menu, $as_Img, $as_Alt="", $as_Link="", $as_Type="", $as_ExistChild="", $as_Depth=-1 )			{				$this->cls_LeftMenuArea->SetData( $as_Menu, $as_Img, $as_Alt, $as_Link, $as_Type, $as_ExistChild, $as_Depth );			}			/**			* 메뉴정보 반환			*			* @return array		:	해당 메뉴배열 반환			*/			function GetMenuInfo()			{				return $this->cls_LeftMenuArea->MenuList;			}		#endregion		#region Top 영역 데이터 관리			/**			* Navi정보 반환			*			* @param string		$as_Key	:	해당 Key			* @return string			*/			function GetNaviInfo( $as_Key )			{				$is_rtn = "<a href=\"".GDC_SITE_ROOT."\">HOME</a>";				$iarr_pageElement = $this->GetMenuInfo();				while( list($i_key, $i_val) = each($iarr_pageElement) )				{					if( $i_key=='root' )					{						$is_rtn.=" &gt; <a href=\"".$i_val['LINK']."\">".$i_val['ALT']."</a>";					}					else if( $i_key==$as_Key )					{						$is_rtn.=" &gt; <span class=\"b colOrange\">".$i_val['ALT']."</span>";					}				}				return $is_rtn;			}		#endregion		#region 영역별정보			/**			* 영역별정보 파일로부터 로딩하여 셋팅			*			* @param string		$as_InfoName		:	영역별 구분키			* @param string		$as_Uri				:	파일경로			*/			function LoadElementInfo( $as_InfoName, $as_Uri )			{				$filename = GDC_INCLUDE_ROOT."/elements/".$as_Uri;				if (!file_exists($filename)) $this->error('fatal', "디자인 파일이 존재하지 않습니다! 파일경로 및 파일명을 확인하세요!<br />".$filename);				$tmp = fread($fp = fopen($filename, 'r'), filesize($filename));				fclose($fp);				$this->SetElementInfo( $as_InfoName, $tmp );			}			/**			* 영역별정보 셋팅			*			* @param string		$as_InfoName		:	영역별 구분키			* @param string		$as_Data			:	데이터			*/			function SetElementInfo( $as_InfoName, $as_Data )			{				$this->ElementInfo[$as_InfoName] = $as_Data;			}			/**			* 영역별정보 출력			*			* @param string		$as_InfoName		:	영역별 구분키			* @return string						:	데이터			*/			function GetElementInfo( $as_InfoName )			{				return $this->ElementInfo[$as_InfoName];			}		#endregion		#region 페이지요소			/**			* 페이지요소 파일로부터 include 처리			*			* @param string		$as_Uri				:	파일경로			* @return boolean						:	include 결과			*/			function IncludePageElement( $as_Uri )			{				$filename = GDC_INCLUDE_ROOT."/elements/".$as_Uri;				if (!file_exists($filename)) $this->error('fatal', "파일이 존재하지 않습니다! 파일경로 및 파일명을 확인하세요! : ".$filename);				return include $filename;			}		#endregion		#region 고객 체크 및 속성관리 영역			/**			* 고객 속성값 반환			*			* @param string		$as_FieldName			:	필드명			* @return string			*/			function GetMemberInfoByCookie( $as_FieldName )			{				$memberinfo = $this->GetCookie( "ez_session", "" );				if( is_array($memberinfo) )				{					return $memberinfo[$as_FieldName];				}				return '';			}			/**			* 고객 속성값 반환(From DB)			*			* @param string		$as_FieldName			:	필드명			* @return string			*/			function GetMemberInfoByDB( $as_FieldName )			{				return $this->cls_MemberLoginModuleControl->GetDataOfEZMember( $as_FieldName );			}			/**			* 로그인상태 체크			*			* @return boolean			*/			function AuthorizeMember()			{				if( $this->GetMemberInfoByCookie( "id" ) )				{					return $this->cls_MemberLoginModuleControl->IsExistMember( $this->GetMemberInfoByCookie( "id" ) );				}				return false;			}			/**			* 로그인 가능여부 체크			*			* @return boolean			*/			function IsMember()			{				if( $this->GetRequest( "id", "" ) )				{					return $this->cls_MemberLoginModuleControl->IsMember( $this->GetRequest( "id", "" ), $this->GetRequest( "passwd", "" ) );				}				return false;			}			/**			* IsAllowedLevel			*			* @param string		$as_Level				:	권한코드			* @return boolean			*/			function IsAllowedLevel( $as_Level='' )			{				$ib_rtn = false;				if( empty($as_Level) || $as_Level == 'ZM' )	//비회원 허용				{					$ib_rtn = true;				}				else if( $this->GetMemberInfoByCookie( "level" ) && ($this->GetMemberInfoByCookie( "level" ) <= $as_Level) )				{					$ib_rtn = true;				}				return $ib_rtn;			}			/**			* IsWindFamily			*			* @return integer			*/			function IsWindFamily()			{				$ii_rtn = -1;				if( $this->AuthorizeMember() )	//회원				{					switch( $this->GetMemberInfoByDB( "windfamily" ) )					{						case "Y":	$ii_rtn = 1;	break;	//승인완료 상태						case "N":	$ii_rtn = -1;	break;						default:	$ii_rtn = 0;	break;	//대기중인 상태					}				}				return $ii_rtn;			}		#endregion		#region 페이지 영역별 출력			/**			* Header 영역 출력			*			* @param string		$as_Title			:	Page Title			* @param string		$as_Keyword			:	Page Key-Word			* @param boolean	$ab_IsPrint			:	Print Check			* @return string						:	데이터			*/			function PrintElementHeader( $as_Title="", $as_KeyWord="", $ab_IsPrint=true )			{				$as_Title	= empty($as_Title) ? "더불어 함께하는 사회복지법인 하트-하트재단(Heart-Heart Welfare Foundation.)" : $as_Title;				$as_KeyWord	= empty($as_KeyWord) ? "저소득,다문화,결식,사회공헌,소나무,의료비,시력,급식비,기업나눔,빈곤아동,해외지원,캄보디아,방글라데시,몽골,급식,해외사업,시력회복,백내장,국제개발,국제협력,해외아동돕기,보건의료,교육,실명예방,심장병,심장병아동,심장병아동수술지원,심장병지원,시력회복사업,아동교육사업,태국,메솟,미얀마,이주미얀마아동,더불어,하트-하트윈드오케스트라,희망모금,희망쇼핑,하트하트윈드오케스트라,장애음악,윈드오케스트라,장애재능,하트,하트하트,하트-하트,하트재단,윈드,오케스트라,발달장애,의료지원,후원,기부,나눔" : $as_KeyWord;				switch( $this->PageType )				{					case "HTML":						$this->cls_Html->SetPageInfoOfField( "TITLE", $as_Title );						$this->cls_Html->SetPageInfoOfField( "KEYWORD", $as_KeyWord );						$this->cls_Html->SetAttribute( $this->Attribute );						$is_rtn = $this->cls_Html->cls_Header->GetContent();						if( $ab_IsPrint ) echo $is_rtn;						break;					default:						break;				}				return $is_rtn;			}			/**			* Footer 영역 출력			*			* @param boolean	$ab_IsPrint			:	Print Check			* @return string						:	데이터			*/			function PrintElementFooter( $ab_IsPrint=true )			{				switch( $this->PageType )				{					case "HTML":						$is_rtn = $this->cls_Html->cls_Footer->GetContent();						if( $ab_IsPrint ) echo $is_rtn;						break;					default:						break;				}				return $is_rtn;			}		#endregion		#region MACSecure Code			/**			* 보안코드 생성 및 세션등록처리			*			* @return string			*/			function GetMACSecureCode()			{				global $_SESSION;				$tmp_str = substr(md5(time()),0,10);				list($usec, $sec) = explode(' ', microtime());				$seed = (float)$sec + ((float)$usec * 100000);				srand($seed);				$keylen = strlen($tmp_str);				$div = (int)($keylen / 2);				while (count($arr) < 3)				{					unset($arr);					for ($i=0; $i<$keylen; $i++)					{						$rnd = rand(1, $keylen);						$arr[$rnd] = $rnd;						if ($rnd > $div) break;					}				}				sort($arr);				$norobot_key = "";				$norobot_str = "";				$m = 0;				for ($i=0; $i<count($arr); $i++)				{					for ($k=$m; $k<$arr[$i]-1; $k++)						$norobot_str .= $tmp_str[$k];					$norobot_str .= "<span class='norobot'>{$tmp_str[$k]}</span>";					$norobot_key .= $tmp_str[$k];					$m = $k + 1;				}				if ($m < $keylen)				{					for ($k=$m; $k<$keylen; $k++)						$norobot_str .= $tmp_str[$k];				}				$norobot_str = "<span class='robot'>$norobot_str</span>";				//session_start();				$_SESSION["mac_session"] = $norobot_key;				return $norobot_str;			}			/**			* 보안코드 생성 및 세션등록처리			*			* @return string			*/			function GetMACSecureCodeOfAllow()			{				global $_SESSION;				return $_SESSION["mac_session"];			}			/**			* 보안코드 비교체크			*			* @param string		$as_Code		:	보안코드			* @return boolean			*/			function IsMACSecureCodeAllow( $as_Code )			{				return ( empty($this->SESSION["mac_session"]) ? false : ($this->SESSION["mac_session"] == $as_Code) );			}		#endregion	}}?>